<Page
    x:Class="MyAlbum.Pages.AlbumPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:MyAlbum"
    xmlns:viewModels="using:MyAlbum.ViewModels"
    xmlns:converters="using:MyAlbum.Converters"
    mc:Ignorable="d"
    Loaded="Page_Loaded">
    
    <Page.Resources>
        <converters:BoolNegationConverter x:Key="BoolNegationConverter"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
        <converters:NullabilityToBoolConverter x:Key="NullabilityToBoolConverter"/>
        <converters:ViewTypeToBoolConverter x:Key="ViewTypeToBoolConverter"/>
        <converters:NoopConverter x:Key="NoopConverter"/>
        <converters:PropertyToValidationMessageConverter x:Key="PhotoPropertyToValidationMessageConverter"/>
        <local:ViewType x:Key="GridView">GridView</local:ViewType>
        <local:ViewType x:Key="FlipView">FlipView</local:ViewType>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStates">

                <VisualState x:Name="NarrowerState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowerStateMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="splitView.IsPaneOpen" Value="False"/>
                        <Setter Target="splitView.OpenPaneLength" Value="364"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowStateMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="splitView.IsPaneOpen" Value="False"/>
                        <Setter Target="splitView.OpenPaneLength" Value="364"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideStateMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="WiderState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WiderStateMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <RelativePanel>
            <TextBlock x:Name="tbAlbum" Text="Album:" Margin="10" 
                       RelativePanel.AlignLeftWithPanel="True"
                       Style="{ThemeResource TitleTextBlockStyle}"/>

            <!-- Album's Title -->
            <HyperlinkButton x:Name="AlbumTitle" Content="{x:Bind AlbumViewModel.Title, Mode=OneWay}"
                             RelativePanel.RightOf="tbAlbum" Margin="0,10" Padding="0"
                             Style="{StaticResource TitleHyperlinkButtonStyle}"
                             Click="{x:Bind AlbumViewModel.EditAlbum}"
                             ToolTipService.ToolTip="Edit Album"/>

            <!--View Types-->
            <StackPanel Orientation="Horizontal"
                        RelativePanel.AlignRightWithPanel="True"
                        RelativePanel.AlignVerticalCenterWithPanel="True">

                <RadioButton x:Name="gridViewButton" MinWidth="0" Margin="0,0,5,0"
                             FontFamily="segoe mdl2 assets" Content="&#xE8A9;" FontSize="21"
                             ToolTipService.ToolTip="Grid View" Padding="1,1,0,0"
                             Style="{StaticResource RadioButtonToggleButtonStyle}"
                             IsChecked="{Binding ViewType, Converter={StaticResource ViewTypeToBoolConverter}, ConverterParameter={StaticResource GridView}}"
                             Command="{x:Bind AlbumViewModel.SetViewTypeCommand}"
                             CommandParameter="{StaticResource GridView}"/>

                <RadioButton x:Name="flipViewButton" MinWidth="0" Margin="0,0,5,0"
                             FontFamily="segoe mdl2 assets" Content="&#xE71A;" FontSize="20"
                             ToolTipService.ToolTip="Flip View" Padding="1"
                             Style="{StaticResource RadioButtonToggleButtonStyle}"
                             IsChecked="{Binding ViewType, Converter={StaticResource ViewTypeToBoolConverter}, ConverterParameter={StaticResource FlipView}}"
                             Command="{x:Bind AlbumViewModel.SetViewTypeCommand}"
                             CommandParameter="{StaticResource FlipView}"/>
            </StackPanel>
        </RelativePanel>

        <SplitView x:Name="splitView" Grid.Row="1" DisplayMode="CompactInline" PanePlacement="Right"
                   OpenPaneLength="{x:Bind AlbumViewModel.PhotoDetailsOpenPaneLength, Mode=OneWay, FallbackValue=364}"
                   CompactPaneLength="{x:Bind AlbumViewModel.PhotoDetailsCompactPaneLength, FallbackValue=32}" 
                   IsPaneOpen="{x:Bind AlbumViewModel.IsPhotoDetailsPaneOpen, Mode=OneWay}"
                   PaneClosed="{x:Bind AlbumViewModel.PhotoDetailsPaneClosed}">

            <SplitView.Pane>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="1" Content="Photo Details" Background="Transparent" Margin="34,0,0,0"
                            Click="{x:Bind AlbumViewModel.TogglePhotoDetailsPane}">
                        <Button.RenderTransform>
                            <RotateTransform Angle="90" />
                        </Button.RenderTransform>
                    </Button>
                    <RelativePanel>
                        <TextBlock Text="Photo Details" RelativePanel.AlignHorizontalCenterWithPanel="True" 
                                   RelativePanel.AlignVerticalCenterWithPanel="True"/>
                        <ToggleButton FontFamily="segoe mdl2 assets" Content="&#xE840;" Background="Transparent" 
                                      RelativePanel.AlignRightWithPanel="True" 
                                      RelativePanel.AlignVerticalCenterWithPanel="True"
                                      IsChecked="{x:Bind AlbumViewModel.IsPhotoDetailsPanePinned, Mode=TwoWay}"/>
                    </RelativePanel>

                    <!-- Photo Details -->
                    <UserControl Grid.Row="1" IsEnabled="{x:Bind AlbumViewModel.SelectedPhoto, Converter={StaticResource NullabilityToBoolConverter}, Mode=OneWay}">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <Grid>
                                <StackPanel HorizontalAlignment="Stretch" Margin="10,10,15,10" Width="310">
                                    <TextBlock Text="Title" Margin="0,0,0,10"/>
                                    <TextBox Text="{Binding SelectedPhoto.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <TextBlock Text="{x:Bind AlbumViewModel.SelectedPhoto.Title, Mode=OneWay, Converter={StaticResource PhotoPropertyToValidationMessageConverter}, ConverterParameter=Title}"
                                               Visibility="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource StringToVisibilityConverter}}"
                                               Style="{StaticResource ErrorTextBlockStyle}"/>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="Location" VerticalAlignment="Center" Margin="0,10"/>
                                        <HyperlinkButton Grid.Column="1" Click="{x:Bind AlbumViewModel.SelectedPhoto.SetCurrentLocation}">
                                            <TextBlock Text="&#xE1D2;" FontFamily="segoe mdl2 assets" 
                                                       Margin="10,0,0,-3" ToolTipService.ToolTip="Set current location" />
                                        </HyperlinkButton>
                                    </Grid>
                                    <TextBox Text="{Binding SelectedPhoto.Location, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <TextBlock Text="{x:Bind AlbumViewModel.SelectedPhoto.Location, Mode=OneWay, Converter={StaticResource PhotoPropertyToValidationMessageConverter}, ConverterParameter=Location}"
                                               Visibility="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource StringToVisibilityConverter}}"
                                               Style="{StaticResource ErrorTextBlockStyle}"/>

                                    <TextBlock Text="Description" Margin="0,10"/>
                                    <TextBox Text="{Binding SelectedPhoto.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="100"
                                             TextWrapping="Wrap" AcceptsReturn="True" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                                    <TextBlock Text="{x:Bind AlbumViewModel.SelectedPhoto.Description, Mode=OneWay, Converter={StaticResource PhotoPropertyToValidationMessageConverter}, ConverterParameter=Description}"
                                               Visibility="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource StringToVisibilityConverter}}"
                                               Style="{StaticResource ErrorTextBlockStyle}"/>

                                    <TextBlock Text="Capture Date" Margin="0,10"/>
                                    <CalendarDatePicker Date="{x:Bind AlbumViewModel.SelectedPhoto.CaptureDate, Mode=TwoWay}"
                                                        PointerEntered="{x:Bind AlbumViewModel.GUIUtils.SetHandPointer}"
                                                        PointerExited="{x:Bind AlbumViewModel.GUIUtils.SetArrowPointer}"
                                                        HorizontalAlignment="Stretch"/>

                                    <TextBlock Text="Photographer" Margin="0,10"/>
                                    <TextBox Text="{Binding SelectedPhoto.Photographer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <TextBlock Text="{x:Bind AlbumViewModel.SelectedPhoto.Photographer, Mode=OneWay, Converter={StaticResource PhotoPropertyToValidationMessageConverter}, ConverterParameter=Photographer}"
                                               Visibility="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource StringToVisibilityConverter}}"
                                               Style="{StaticResource ErrorTextBlockStyle}"/>

                                    <RelativePanel>
                                        <TextBlock Text="Characters:" RelativePanel.AlignVerticalCenterWithPanel="True" Padding="0,0,0,3"/>
                                        <Button RelativePanel.AlignRightWithPanel="True" Background="Transparent"
                                                Click="{x:Bind AlbumViewModel.SelectedPhoto.AddCharacter}" Padding="8,4,0,4">
                                            <Image Source="/Assets/Images/Add.png" MaxHeight="32"/>
                                        </Button>
                                    </RelativePanel>

                                    <!-- Photo's Characters -->
                                    <local:VariableSizedWrapGridView 
                                        x:Name="gvCharacters" 
                                        ItemsSource="{x:Bind AlbumViewModel.SelectedPhoto.Characters, Mode=OneWay}"
                                        MinColSpan="72" MinRowSpan="36" PlaceholderText="enter a name" SelectionMode="None">
                                        <GridView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VariableSizedWrapGrid ItemWidth="1" ItemHeight="1" Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </GridView.ItemsPanel>
                                        <GridView.ItemTemplate>
                                            <DataTemplate x:DataType="viewModels:CharacterViewModel">
                                                <Grid HorizontalAlignment="Center" MaxWidth="306">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>

                                                    <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                             LostFocus="{x:Bind NameEditCompleted}"
                                                             PlaceholderText="{Binding PlaceholderText, ElementName=gvCharacters}" 
                                                             MinWidth="32"/>

                                                    <Button Click="{x:Bind Delete}" Grid.Column="1"
                                                            Padding="0" VerticalAlignment="Center"
                                                            BorderThickness="0" Background="Transparent">
                                                        <Image Source="/Assets/Images/Delete.png" Width="28"/>
                                                    </Button>
                                                    
                                                    <TextBlock Grid.Row="1" Grid.ColumnSpan="2"
                                                               Text="{x:Bind ErrorsForNameProperty, Mode=OneWay}"
                                                               Visibility="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource StringToVisibilityConverter}}"
                                                               Style="{StaticResource ErrorTextBlockStyle}"/>
                                                </Grid>
                                            </DataTemplate>
                                        </GridView.ItemTemplate>
                                    </local:VariableSizedWrapGridView>
                                </StackPanel>
                            </Grid>
                        </ScrollViewer>
                    </UserControl>
                </Grid>
            </SplitView.Pane>

            <SplitView.Content>
                <Grid>
                    <ProgressRing IsActive="{x:Bind AlbumViewModel.IsProgressRingVisible, Mode=OneWay}" 
                                  Visibility="{x:Bind AlbumViewModel.IsProgressRingVisible, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"/>

                    <!-- Photos Grid/Flip View -->
                    <GridView x:Name="photosGridView" Grid.Row="1" 
                              ItemsSource="{x:Bind AlbumViewModel.Photos, Mode=OneWay}"
                              SelectionChanged="{x:Bind AlbumViewModel.PhotosGridView_SelectionChanged}"
                              ItemClick="{x:Bind AlbumViewModel.PhotosGridView_ItemClick}"
                              Tapped="{x:Bind AlbumViewModel.PhotosGridView_Tapped}"
                              Drop="{x:Bind AlbumViewModel.PhotosGridView_Drop}"
                              DragOver="{x:Bind AlbumViewModel.PhotosGridView_DragOver}"
                              AllowDrop="True" SelectionMode="Extended" IsItemClickEnabled="True"
                              ScrollViewer.VerticalScrollBarVisibility="Auto"
                              Visibility="{Binding IsChecked, ElementName=gridViewButton, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <local:MaxSizePanel/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <GridView.ItemTemplate>
                            <DataTemplate x:DataType="viewModels:PhotoViewModel">
                                <UserControl>
                                    <StackPanel x:Name="photoCard" Margin="5,10,5,0" Width="200">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="AdaptiveVisualStates">

                                                <VisualState x:Name="NarrowerState">
                                                    <VisualState.StateTriggers>
                                                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowerStateMinWidth}" />
                                                    </VisualState.StateTriggers>
                                                    <VisualState.Setters>
                                                        <Setter Target="photoCardDetailsGrid.Visibility" Value="Collapsed"/>
                                                        <Setter Target="photoCard.Width" Value="100"/>
                                                        <Setter Target="isSelectedCheckBox.Width" Value="10"/>
                                                    </VisualState.Setters>
                                                </VisualState>

                                                <VisualState x:Name="NarrowState">
                                                    <VisualState.StateTriggers>
                                                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowStateMinWidth}" />
                                                    </VisualState.StateTriggers>
                                                    <VisualState.Setters>
                                                        <Setter Target="photoCardDetailsGrid.Visibility" Value="Collapsed"/>
                                                        <Setter Target="photoCard.Width" Value="125"/>
                                                        <Setter Target="isSelectedCheckBox.Width" Value="13"/>
                                                    </VisualState.Setters>
                                                </VisualState>

                                                <VisualState x:Name="WideState">
                                                    <VisualState.StateTriggers>
                                                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideStateMinWidth}" />
                                                    </VisualState.StateTriggers>
                                                    <VisualState.Setters>
                                                        <Setter Target="photoCard.Width" Value="150"/>
                                                        <Setter Target="isSelectedCheckBox.Width" Value="17"/>
                                                    </VisualState.Setters>
                                                </VisualState>

                                                <VisualState x:Name="WiderState">
                                                    <VisualState.StateTriggers>
                                                        <AdaptiveTrigger MinWindowWidth="{StaticResource WiderStateMinWidth}" />
                                                    </VisualState.StateTriggers>
                                                    <VisualState.Setters>
                                                    </VisualState.Setters>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>

                                        <CheckBox x:Name="isSelectedCheckBox"
                                                  Style="{StaticResource VariableSizedCheckBoxStyle}"
                                                  IsChecked="{x:Bind IsSelected, Mode=TwoWay}"
                                                  Command="{x:Bind SelectionChangedCommand}"
                                                  CommandParameter="{Binding ElementName=photosGridView}"
                                                  HorizontalAlignment="Right" FlowDirection="RightToLeft"
                                                  Margin="0,0,0,5"/>

                                        <Image Source="{x:Bind ImagePath, Mode=OneWay}"
                                               Height="{Binding Width, ElementName=photoCard}"/>

                                        <Grid x:Name="photoCardDetailsGrid">
                                            <StackPanel>
                                                <TextBox Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                         PlaceholderText="enter title" BorderThickness="0"
                                                         HorizontalAlignment="Center" TextAlignment="Center"
                                                         ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"
                                                         Margin="0,10,0,0"/>
                                                <TextBlock Text="{Binding Title, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PhotoPropertyToValidationMessageConverter}, ConverterParameter=Title}"
                                                           Visibility="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource StringToVisibilityConverter}}"
                                                           Style="{StaticResource ErrorTextBlockStyle}" 
                                                           ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"
                                                           VerticalAlignment="Top" HorizontalAlignment="Center"/>

                                                <Grid HorizontalAlignment="Center">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBox x:Name="photoLocation" 
                                                             Text="{Binding Location, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                             PlaceholderText="enter location"
                                                             BorderThickness="0" TextAlignment="Center"
                                                             ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"/>
                                                    <HyperlinkButton Grid.Column="1" Click="{x:Bind SetCurrentLocation}" Padding="3,0,0,3">
                                                        <TextBlock Text="&#xE1D2;" FontFamily="segoe mdl2 assets"
                                                                   ToolTipService.ToolTip="Set current location" />
                                                    </HyperlinkButton>
                                                </Grid>
                                                <TextBlock Text="{Binding Location, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PhotoPropertyToValidationMessageConverter}, ConverterParameter=Location}"
                                                           Visibility="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource StringToVisibilityConverter}}"
                                                           Style="{StaticResource ErrorTextBlockStyle}"
                                                           ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"
                                                           VerticalAlignment="Top" HorizontalAlignment="Center"/>

                                                <CalendarDatePicker Date="{x:Bind CaptureDate, Mode=TwoWay}" 
                                                                    PointerEntered="{x:Bind GUIUtils.SetHandPointer}"
                                                                    PointerExited="{x:Bind GUIUtils.SetArrowPointer}"
                                                                    HorizontalAlignment="Center" BorderThickness="0"/>
                                            </StackPanel>
                                        </Grid>
                                    </StackPanel>
                                </UserControl>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>
                    
                    <FlipView x:Name="photosFlipView" Grid.Row="1" 
                              ItemsSource="{x:Bind AlbumViewModel.Photos, Mode=OneWay}"
                              SelectedItem="{x:Bind AlbumViewModel.SelectedPhoto, Mode=OneWay}"
                              SelectionChanged="{x:Bind AlbumViewModel.PhotosFlipView_SelectionChanged}"
                              Tapped="{x:Bind AlbumViewModel.PhotosFlipView_Tapped}"
                              Visibility="{Binding IsChecked, ElementName=flipViewButton, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                        <FlipView.ItemTemplate>
                            <DataTemplate x:DataType="viewModels:PhotoViewModel">
                                <RelativePanel Margin="10">
                                    <TextBlock x:Name="photoTitle" Text="{x:Bind Title, Mode=OneWay}" 
                                               RelativePanel.AlignHorizontalCenterWithPanel="True" 
                                               TextAlignment="Center" Margin="0,0,0,5"/>
                                    <Image Source="{x:Bind ImagePath, Mode=OneWay}"
                                           RelativePanel.Below="photoTitle"
                                           RelativePanel.AlignHorizontalCenterWithPanel="True"/>
                                </RelativePanel>
                            </DataTemplate>
                        </FlipView.ItemTemplate>
                    </FlipView>
                </Grid>
            </SplitView.Content>
        </SplitView>
    </Grid>
</Page>
